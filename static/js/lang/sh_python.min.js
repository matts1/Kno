if(!this.sh_languages){this.sh_languages={}}sh_languages.python=[[
//[/\b(?:import|from)\b/g,"sh_preproc",-1],
[/#/g,"sh_comment",1],
[/\b[+-]?(?:(?:0x[A-Fa-f0-9]+)|(?:(?:[\d]*\.)?[\d]+(?:[eE][+-]?[\d]+)?))u?(?:(?:int(?:8|16|32|64))|L)?\b/g,"sh_number",-1],
[/\b(?:and|assert|break|class|continue|def|del|elif|else|except|exec|finally|for|global|if|in|is|lambda|not|or|pass|raise|return|try|while|import|from)\b/g,"sh_keyword",-1],
[/^(?:[\s]*'{3})/g,"sh_string",2],[/^(?:[\s]*\"{3})/g,"sh_string",3],
[/^(?:[\s]*'(?:[^\\']|\\.)*'[\s]*|[\s]*\"(?:[^\\\"]|\\.)*\"[\s]*)$/g,"sh_comment",-1],
[/(?:[\s]*'{3})/g,"sh_string",4],[/(?:[\s]*\"{3})/g,"sh_string",5],
[/"/g,"sh_string",6],
[/'/g,"sh_string",7],
[/~|!|%|\^|\*|\(|\)|-|\+|=|\[|\]|\\|:|;|,|\.|\/|\?|&|<|>|\||\{|\}/g,"sh_symbol",-1],
[/\b(?:None|True|False|NotImplemented|Ellipsis|__debug__)\b/g,"sh_predef_var",-1],
[/\b(?:abs|dict|help|min|setattr|all|dir|hex|next|slice|any|divmod|id|object|sorted|ascii|enumerate|input|oct|staticmethod|bin|eval|int|open|str|bool|exec|isinstance|ord|sum|bytearray|filter|issubclass|pow|super|bytes|float|iter|print|tuple|callable|format|len|property|type|chr|frozenset|list|range|vars|classmethod|getattr|locals|repr|zip|compile|globals|map|reversed|__import__|complex|hasattr|max|round|delattr|hash|memoryview|set|exit|quit)\b/g,"sh_predef_func",-1],
[/(?:[A-Za-z]|_)[A-Za-z0-9_]*(?=[ \t]*\()/g,"sh_function",-1]],
[[/$/g,null,-2]],
[[/(?:'{3})/g,"sh_string",-2]],[[/(?:\"{3})/g,"sh_string",-2]],[[/(?:'{3})/g,"sh_string",-2]],
[[/(?:\"{3})/g,"sh_string",-2]],[[/$/g,null,-2],[/\\(?:\\|")/g,null,-1],[/"/g,"sh_string",-2]],
[[/$/g,null,-2],[/\\(?:\\|')/g,null,-1],[/'/g,"sh_string",-2]]];
